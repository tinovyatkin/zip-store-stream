name: Node.js Package

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: yarn install --frozen-lockfile --ignore-optional --non-interactive --silent
      - run: node --expose-gc node_modules/jest/bin/jest --forceExit --logHeapUsage --runInBand --ci
      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage/coverage-final.json

      - name: Save ESLint results as JSON for sonar
        run: yarn lint --format json -o reports/eslint-results.json

      - name: SonarCloud Scan
        run: |
          curl --create-dirs -sSLo .sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
          unzip -o .sonar/sonar-scanner.zip -d .sonar/
          .sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux/bin/sonar-scanner \
            -Dsonar.login=${{ secrets.SONAR_LOGIN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SCANNER_VERSION: '4.2.0.1873'
          # https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner
          SONAR_SCANNER_OPTS: -Xmx1024m

  lint-package:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: rm .yarnclean
      - run: npx npmPkgJsonLint .

  publish-npm:
    needs: lint-package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: rm .yarnclean
      - run: yarn install --frozen-lockfile --ignore-optional --non-interactive --silent
      - run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
